{
  "hash": "b60d05d913bd02ed73fc03f2fef7f2a7",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Solutions\"\nauthor: \"Moira Chiong\"\ndescription: \"Introduction to Visualization\"\ndate: \"6/15/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n```\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nAB_NYC_2019 <-read_csv(\"posts/_data/AB_NYC_2019.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: 'posts/_data/AB_NYC_2019.csv' does not exist in current working directory ('C:/Users/chion/OneDrive/Desktop/DACSS 601/DACSS_601_Summer2023_Sec1/posts').\n```\n:::\n\n```{.r .cell-code}\nView(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.data.frame(x): object 'AB_NYC_2019' not found\n```\n:::\n:::\n\n\n```\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"rmarkdown\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n```\n:::\n\n```{.r .cell-code}\nlibrary(rmarkdown)\n```\n:::\n\n### Briefly describe the data\n\nThe data pertains to key indicators for AirBnB homes. There are short descriptions including type of home, location, and price per evening. There is also data about the number of customer reviews the unit has had, as well data about availability (365 days a year or less) and host name. The mean minimum cost is around $1284 while the average stay length required is 7 or a week. The homes are most frequently located in Manhattan, followed by Brooklyn , Queens, Bronx and Staten Island. The most common type of home being rented is an entire home/apartment, followed by private rooms and shared rooms.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n#Answer\nThe data is already tidy, but for practical accounting ease, I will calculate the total minimum cost per stay using the mutate variable.\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nSee above\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"dplyr\")    # alternative installation of the %>\nlibrary(dplyr)    # alternatively, this also loads %>%\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_NYC <-AB_NYC_2019%>%\n  mutate(`minimum_cost`= `price`*`minimum_nights`)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., minimum_cost = price * minimum_nights): object 'AB_NYC_2019' not found\n```\n:::\n\n```{.r .cell-code}\nairbnb_NYC\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\n#next I'll find the mean minimum cost\nmean(airbnb_NYC$minimum_cost,na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(airbnb_NYC$minimum_cost, na.rm = TRUE): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\nmean(airbnb_NYC$minimum_nights, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(airbnb_NYC$minimum_nights, na.rm = TRUE): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\ntable(airbnb_NYC$neighbourhood_group)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(airbnb_NYC$neighbourhood_group): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\ntable(airbnb_NYC$room_type)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(airbnb_NYC$room_type): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\n## Univariate Visualizations\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nggplot(airbnb_NYC, aes(x=`minimum_cost`)) +\n  geom_histogram(bins=60) +\n  scale_x_continuous(limits = c(0, 7000)) +\n  ggtitle(\"Minimum Cost\") +\n  labs(y = \"Number of Apartments\", x = \"Minimum Cost Per Listing\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(airbnb_NYC, aes(x = minimum_cost)): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\nprint(vis1)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(vis1): object 'vis1' not found\n```\n:::\n\n```{.r .cell-code}\nvis2 <- ggplot(airbnb_NYC, aes(x=`price`, fill=`room_type`)) +\n  geom_bar(width=25) +\n  scale_x_continuous(limits = c(0, 1000)) +\n  ggtitle(\"Price per Night by Room Type\") +\n  labs(y = \"Number of Apartments\", x = \"Cost per Night\", fill = \"Room Type\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(airbnb_NYC, aes(x = price, fill = room_type)): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\nprint(vis2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(vis2): object 'vis2' not found\n```\n:::\n\n```{.r .cell-code}\n## Bivariate Visualization(s)\n\nvis3 <- ggplot(airbnb_NYC, aes(x=`minimum_nights`, y=`price`, color=`room_type`)) +\n  geom_point() +\n  scale_x_continuous(limits = c(0, 500)) +\n  ggtitle(\"Price per Night Divided by Room Type\") +\n  labs(y = \"Cost Per Night\", x = \"Mimimum Nights\", color = \"Room Type\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(airbnb_NYC, aes(x = minimum_nights, y = price, color = room_type)): object 'airbnb_NYC' not found\n```\n:::\n\n```{.r .cell-code}\nprint(vis3)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(vis3): object 'vis3' not found\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "2b803d02b1ae1d54bd1cf95dbe430a38",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Instructions\"\nauthor: \"Gabrielle Roman\"\ndescription: \"Joining Data\"\ndate: \"7/17/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - military marriages\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(readr)\nlibrary(here)\nlibrary(purrr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMaritalStatus_untidy<-read_xls(\"_data/ActiveDuty_MaritalStatus.xls\")\nview(MaritalStatus_untidy)\n```\n:::\n\n\n### Briefly describe the data\nThis data set specifies (in some complex terms) the marital and parental statuses of military personnel. Subcategories include pay grade, single with children, single without children, joint service marriage, civilian marriage. I notice that there is no overlap between these variables, and no individual could have multiple pay grades or both have and not have children.\n\nThere are several datasets with the same variables for different branches of the army.\n\n## Tidy Data (as needed)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#designating columns for the first sheet in the dataset, which will be applied to all of them after joining.\n\nmarital_status_cols <- c(\"delete\", \"payGrade_payLevel\",\n            \"single_nokids_male\", \"single_nokids_female\", \"delete\",\n            \"single_kids_male\", \"single_kids_female\", \"delete\",\n            \"married_military_male\", \"married_military_female\", \"delete\",\n            \"married_civilian_male\", \"married_civilian_female\", \"delete\",\n            rep(\"delete\", 3))\n\nread_excel(here(\"posts\",\"_data\",\"ActiveDuty_MaritalStatus.xls\"), \n           skip=8,\n           col_names = marital_status_cols)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 31 × 17\n   delete...1 payGrade_payLevel single_nokids_male single_nokids_female\n   <chr>      <chr>             <chr>              <chr>               \n 1 <NA>       Pay Grade         Male               Female              \n 2 <NA>       E-1               31229              5717                \n 3 <NA>       E-2               53094              8388                \n 4 <NA>       E-3               131091             21019               \n 5 <NA>       E-4               112710             16381               \n 6 <NA>       E-5               57989              11021               \n 7 <NA>       E-6               19125              4654                \n 8 <NA>       E-7               5446               1913                \n 9 <NA>       E-8               1009               438                 \n10 <NA>       E-9               381                202                 \n# ℹ 21 more rows\n# ℹ 13 more variables: delete...5 <chr>, single_kids_male <chr>,\n#   single_kids_female <chr>, delete...8 <chr>, married_military_male <chr>,\n#   married_military_female <chr>, delete...11 <chr>,\n#   married_civilian_male <chr>, married_civilian_female <chr>,\n#   delete...14 <chr>, delete...15 <chr>, delete...16 <chr>, delete...17 <chr>\n```\n:::\n\n```{.r .cell-code}\n#deleting unneeded columns from the dataset\n\nmaritalstatus_newcol<-read_excel(here(\"posts\",\"_data\",\"ActiveDuty_MaritalStatus.xls\"), \n           skip=9,\n           col_names = marital_status_cols\n           )%>%\n  select(!contains(\"delete\"))%>%\n  filter(str_detect(payGrade_payLevel, \"TOTAL\", negate=TRUE))\n\nmaritalstatus_newcol\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 9\n   payGrade_payLevel single_nokids_male single_nokids_female single_kids_male\n   <chr>                          <dbl>                <dbl>            <dbl>\n 1 E-1                            31229                 5717              563\n 2 E-2                            53094                 8388             1457\n 3 E-3                           131091                21019             4264\n 4 E-4                           112710                16381             9491\n 5 E-5                            57989                11021            10937\n 6 E-6                            19125                 4654            10369\n 7 E-7                             5446                 1913             6530\n 8 E-8                             1009                  438             1786\n 9 E-9                              381                  202              579\n10 O-1                            13495                 3081              402\n# ℹ 14 more rows\n# ℹ 5 more variables: single_kids_female <dbl>, married_military_male <dbl>,\n#   married_military_female <dbl>, married_civilian_male <dbl>,\n#   married_civilian_female <dbl>\n```\n:::\n:::\n\n\nMutating the dataset for analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#separating payGrade_payLevel and pivoting for tidiness\nmarital_tidy<-maritalstatus_newcol %>% \n  separate(payGrade_payLevel,\n           into = c(\"payGrade\", \"payLevel\"),\n           sep = \"-\") %>% \n  pivot_longer(cols = contains(c(\"male\", \"female\")),\n                 names_to = c(\"Marriage_status\", \"Kids_or_Spouse_Status\", \"Gender\"),\n                 names_sep = \"_\",\n                 values_to = \"Count\")\n\nview(marital_tidy)\n```\n:::\n\n\n## Join Data\n\nI'm going to join by writing a function, which is necessary because I want the input to match the adjustments I made to the first sheet. The [-1] in the code when I run the function indicates to ignore the first sheet because its data is already accounted for.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexcel_sheets(here(\"posts\",\"_data\",\"ActiveDuty_MaritalStatus.xls\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"TotalDoD\"    \"AirForce\"    \"MarineCorps\" \"Navy\"        \"Army\"       \n```\n:::\n\n```{.r .cell-code}\nmilitaryreader<-function(sheet_name){\n  dat <- read_excel(here(\"posts\",\"_data\",\"ActiveDuty_MaritalStatus.xls\"),\n  sheet = sheet_name,\n  skip = 9,\n  col_names = marital_status_cols) %>%\n  mutate(\"branch\" = sheet_name) %>% \n  select(!contains(\"delete\"))%>%\n  filter(str_detect(payGrade_payLevel, \"TOTAL\", negate=TRUE)) %>%\n  separate(payGrade_payLevel,\n           into = c(\"payGrade\", \"payLevel\"),\n           sep = \"-\") %>% \n  pivot_longer(cols = contains(c(\"male\", \"female\")),\n                 names_to = c(\"Marriage_status\", \"Kids_or_Spouse_Status\", \"Gender\"),\n                 names_sep = \"_\",\n                 values_to = \"Count\")\nreturn(dat)}\n  \nenlisted_military_status<-map_dfr(excel_sheets(here(\"posts\",\"_data\",\"ActiveDuty_MaritalStatus.xls\"))[-1], militaryreader)\n\nhead(enlisted_military_status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  payGrade payLevel branch   Marriage_status Kids_or_Spouse_Status Gender Count\n  <chr>    <chr>    <chr>    <chr>           <chr>                 <chr>  <dbl>\n1 E        1        AirForce single          nokids                male    7721\n2 E        1        AirForce single          nokids                female  1550\n3 E        1        AirForce single          kids                  male      27\n4 E        1        AirForce single          kids                  female     5\n5 E        1        AirForce married         military              male      49\n6 E        1        AirForce married         military              female    27\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Comparing the branches by marriage status:\n\nunique(enlisted_military_status$branch)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"AirForce\"    \"MarineCorps\" \"Navy\"        \"Army\"       \n```\n:::\n\n```{.r .cell-code}\nggplot(enlisted_military_status, aes(branch, Marriage_status))+\n  geom_count()\n```\n\n::: {.cell-output-display}\n![](challenge8_GabrielleRoman_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n# Questions-- Would it be more efficient to join the data mefore mutating and tidying? How do I specify that I only want the data tht contains \"military\" or \"civilian\" mapped from the Kids_or_Spouse_Status column? Why can't I use geom_bar/histogram?\n\n\n",
    "supporting": [
      "challenge8_GabrielleRoman_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
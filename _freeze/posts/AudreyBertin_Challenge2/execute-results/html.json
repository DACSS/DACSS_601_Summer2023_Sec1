{
  "hash": "db79bcabc2ea26453b07763e2ae4a22f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 - Investigating Hotel Bookings\"\nauthor: \"Audrey Bertin\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"6/1/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nFor this challenge I looked at the `hotel_bookings.csv ⭐⭐⭐⭐` dataset:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels <- readr::read_csv(\"_data/hotel_bookings.csv\")\n```\n:::\n\n\n\n## Data Overview\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(hotels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 119,390\nColumns: 32\n$ hotel                          <chr> \"Resort Hotel\", \"Resort Hotel\", \"Resort…\n$ is_canceled                    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n$ lead_time                      <dbl> 342, 737, 7, 13, 14, 14, 0, 9, 85, 75, …\n$ arrival_date_year              <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 201…\n$ arrival_date_month             <chr> \"July\", \"July\", \"July\", \"July\", \"July\",…\n$ arrival_date_week_number       <dbl> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,…\n$ arrival_date_day_of_month      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stays_in_weekend_nights        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ stays_in_week_nights           <dbl> 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, …\n$ adults                         <dbl> 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ children                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ babies                         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ meal                           <chr> \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB…\n$ country                        <chr> \"PRT\", \"PRT\", \"GBR\", \"GBR\", \"GBR\", \"GBR…\n$ market_segment                 <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ distribution_channel           <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ is_repeated_guest              <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_cancellations         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_bookings_not_canceled <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ reserved_room_type             <chr> \"C\", \"C\", \"A\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ assigned_room_type             <chr> \"C\", \"C\", \"C\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ booking_changes                <dbl> 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ deposit_type                   <chr> \"No Deposit\", \"No Deposit\", \"No Deposit…\n$ agent                          <chr> \"NULL\", \"NULL\", \"NULL\", \"304\", \"240\", \"…\n$ company                        <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n$ days_in_waiting_list           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ customer_type                  <chr> \"Transient\", \"Transient\", \"Transient\", …\n$ adr                            <dbl> 0.00, 0.00, 75.00, 75.00, 98.00, 98.00,…\n$ required_car_parking_spaces    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ total_of_special_requests      <dbl> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 3, …\n$ reservation_status             <chr> \"Check-Out\", \"Check-Out\", \"Check-Out\", …\n$ reservation_status_date        <date> 2015-07-01, 2015-07-01, 2015-07-02, 20…\n```\n:::\n:::\n\n\nThis dataset has 119,300 rows and 32 columns. It contains many different data points on hotel reservations, including information about the customer (how many adults/children are staying, customer type, previous bookings by them, etc), the reservation (arrival date, length of stay, room type, etc), as well as the hotel (country location, distribution channel, hotel type, etc). Each row appears to refer to a single booking at a single hotel.\n\nThe hotels appear to be located all around the world and data covers the years 2015-2017:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotels$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"PRT\"  \"GBR\"  \"USA\"  \"ESP\"  \"IRL\"  \"FRA\"  \"NULL\" \"ROU\"  \"NOR\"  \"OMN\" \n [11] \"ARG\"  \"POL\"  \"DEU\"  \"BEL\"  \"CHE\"  \"CN\"   \"GRC\"  \"ITA\"  \"NLD\"  \"DNK\" \n [21] \"RUS\"  \"SWE\"  \"AUS\"  \"EST\"  \"CZE\"  \"BRA\"  \"FIN\"  \"MOZ\"  \"BWA\"  \"LUX\" \n [31] \"SVN\"  \"ALB\"  \"IND\"  \"CHN\"  \"MEX\"  \"MAR\"  \"UKR\"  \"SMR\"  \"LVA\"  \"PRI\" \n [41] \"SRB\"  \"CHL\"  \"AUT\"  \"BLR\"  \"LTU\"  \"TUR\"  \"ZAF\"  \"AGO\"  \"ISR\"  \"CYM\" \n [51] \"ZMB\"  \"CPV\"  \"ZWE\"  \"DZA\"  \"KOR\"  \"CRI\"  \"HUN\"  \"ARE\"  \"TUN\"  \"JAM\" \n [61] \"HRV\"  \"HKG\"  \"IRN\"  \"GEO\"  \"AND\"  \"GIB\"  \"URY\"  \"JEY\"  \"CAF\"  \"CYP\" \n [71] \"COL\"  \"GGY\"  \"KWT\"  \"NGA\"  \"MDV\"  \"VEN\"  \"SVK\"  \"FJI\"  \"KAZ\"  \"PAK\" \n [81] \"IDN\"  \"LBN\"  \"PHL\"  \"SEN\"  \"SYC\"  \"AZE\"  \"BHR\"  \"NZL\"  \"THA\"  \"DOM\" \n [91] \"MKD\"  \"MYS\"  \"ARM\"  \"JPN\"  \"LKA\"  \"CUB\"  \"CMR\"  \"BIH\"  \"MUS\"  \"COM\" \n[101] \"SUR\"  \"UGA\"  \"BGR\"  \"CIV\"  \"JOR\"  \"SYR\"  \"SGP\"  \"BDI\"  \"SAU\"  \"VNM\" \n[111] \"PLW\"  \"QAT\"  \"EGY\"  \"PER\"  \"MLT\"  \"MWI\"  \"ECU\"  \"MDG\"  \"ISL\"  \"UZB\" \n[121] \"NPL\"  \"BHS\"  \"MAC\"  \"TGO\"  \"TWN\"  \"DJI\"  \"STP\"  \"KNA\"  \"ETH\"  \"IRQ\" \n[131] \"HND\"  \"RWA\"  \"KHM\"  \"MCO\"  \"BGD\"  \"IMN\"  \"TJK\"  \"NIC\"  \"BEN\"  \"VGB\" \n[141] \"TZA\"  \"GAB\"  \"GHA\"  \"TMP\"  \"GLP\"  \"KEN\"  \"LIE\"  \"GNB\"  \"MNE\"  \"UMI\" \n[151] \"MYT\"  \"FRO\"  \"MMR\"  \"PAN\"  \"BFA\"  \"LBY\"  \"MLI\"  \"NAM\"  \"BOL\"  \"PRY\" \n[161] \"BRB\"  \"ABW\"  \"AIA\"  \"SLV\"  \"DMA\"  \"PYF\"  \"GUY\"  \"LCA\"  \"ATA\"  \"GTM\" \n[171] \"ASM\"  \"MRT\"  \"NCL\"  \"KIR\"  \"SDN\"  \"ATF\"  \"SLE\"  \"LAO\" \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotels$arrival_date_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2015 2016 2017\n```\n:::\n:::\n\n\nBeyond this, it is difficult to tell much. Does this cover all hotels in these regions? Only certain hotels that decided to provide their data? Is this just a sample of bookings or is it all of the bookings. The number of data points is too low to cover all hotel bookings around the world over three years.\n\n## Additional Details\n\nWe can further investigate to get a sense of patterns in the data.\n\nFirst, we can look into hotel type and customer type. In theory, different types of customers might stay at different varieties of hotels. We can verify if this is true.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxtabs(~hotel + customer_type, hotels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              customer_type\nhotel          Contract Group Transient Transient-Party\n  City Hotel       2300   293     59404           17333\n  Resort Hotel     1776   284     30209            7791\n```\n:::\n:::\n\nGroups appear more likely than other customer types to book resort hotels, booking them around half the time. Groups appear to be the standout here, so we will look into them further.\n\nLet's start by looking at how many people are registered for each group reservation, compared with other customer types:\n\n#### **Mean** number of people, by type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  group_by(customer_type) %>%\n  mutate(total_people = adults + children + babies) %>%\n  select(adults, children, babies, total_people) %>%\n  summarise_all(funs(mean), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  customer_type   adults children  babies total_people\n  <chr>            <dbl>    <dbl>   <dbl>        <dbl>\n1 Contract          1.92   0.0655 0.00785         1.99\n2 Group             2.35   0.0659 0.00867         2.42\n3 Transient         1.89   0.126  0.00916         2.02\n4 Transient-Party   1.73   0.0322 0.00362         1.76\n```\n:::\n:::\n\n#### **Max** number of people, by type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  group_by(customer_type) %>%\n  mutate(total_people = adults + children + babies) %>%\n  select(adults, children, babies, total_people) %>%\n  summarise_all(funs(max), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  customer_type   adults children babies total_people\n  <chr>            <dbl>    <dbl>  <dbl>        <dbl>\n1 Contract             3       10      1           12\n2 Group               55        3      1           55\n3 Transient            4        3     10           12\n4 Transient-Party      4        3      9           10\n```\n:::\n:::\n\n\n#### **Min** number of people, by type\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  group_by(customer_type) %>%\n  mutate(total_people = adults + children + babies) %>%\n  select(adults, children, babies, total_people) %>%\n  summarise_all(funs(min), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  customer_type   adults children babies total_people\n  <chr>            <dbl>    <dbl>  <dbl>        <dbl>\n1 Contract             0        0      0            0\n2 Group                0        0      0            0\n3 Transient            0        0      0            0\n4 Transient-Party      0        0      0            0\n```\n:::\n:::\n\n\n#### **SD** of number of people, by type\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  group_by(customer_type) %>%\n  mutate(total_people = adults + children + babies) %>%\n  select(adults, children, babies, total_people) %>%\n  summarise_all(funs(sd), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  customer_type   adults children babies total_people\n  <chr>            <dbl>    <dbl>  <dbl>        <dbl>\n1 Contract         0.325    0.361 0.0883        0.497\n2 Group            4.48     0.321 0.0928        4.49 \n3 Transient        0.485    0.435 0.102         0.674\n4 Transient-Party  0.503    0.225 0.0810        0.547\n```\n:::\n:::\n\n\nGroups appear to have the highest total average number of people, as well as a *much* higher maximum number of people. Transient and contract contract customers appear to have a higher maximum number of babies and children than group reservations, which appear to be adult-heavy.\n\nLooking at outliers, we can see for Group reservations that there are some stays with 0 total recorded people staying there for a recorded stay (we see this across all types of customers as well), and the maximum number of people is 55 for a single reservation. Both of those numbers are very odd. It does not make sense to reserve a hotel for no one, and 55 people would require a massive space and is bigger than any normal reservation, even a standard group reservation. 55 is MUCH higher than the mean number of people per group reservation, though we note that the standard deviation of group size is way bigger than the standard deviation for any other customer type.\n\nLooking into group reservations further, we can also look into length of stay by hotel type:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  filter(customer_type == \"Group\") %>%\n  mutate(total_nights = stays_in_weekend_nights + stays_in_week_nights) %>%\n  group_by(hotel) %>%\n  summarise(n_stays = n(), max_stay = max(total_nights), min_stay = min(total_nights), mean_stay = mean(total_nights), sd_stay = sd(total_nights))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  hotel        n_stays max_stay min_stay mean_stay sd_stay\n  <chr>          <int>    <dbl>    <dbl>     <dbl>   <dbl>\n1 City Hotel       293       12        0      2.57    1.69\n2 Resort Hotel     284       14        0      3.21    3.06\n```\n:::\n:::\n\n\nRemember from earlier that groups have an approximately equal number of stays at each hotel type: City and Resort. Maximum stay length is relatively similar between the two (12 vs 14 days). On average, stays are longer at resorts, and there is also a higher standard deviation there. This makes sense logically, as vacations often last longer than, say, a work trip, and they tend to be pretty varied in length depending on the customer.\n\nAgain, we note a strange pattern with min stay length of 0 nights. \n\nWe've noted several outliers here so far. 0 night stays, as well as stays with 0 people and 55 people. Let's look into those outliers further to try and understand what is going on. A few columns appear specifically relevant/useful in identifying a pattern, so we will just look at those.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  mutate(total_nights = stays_in_weekend_nights + stays_in_week_nights) %>%\n  filter(customer_type == \"Group\", total_nights==0) %>%\n  select(hotel, lead_time, adults, children, reservation_status, country, adr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  hotel        lead_time adults children reservation_status country   adr\n  <chr>            <dbl>  <dbl>    <dbl> <chr>              <chr>   <dbl>\n1 Resort Hotel         0      0        0 Canceled           NULL        0\n2 Resort Hotel         1      2        1 Check-Out          PRT         0\n3 Resort Hotel         0      2        0 Check-Out          PRT         0\n4 Resort Hotel         0      1        0 Check-Out          PRT         0\n5 Resort Hotel        69      2        0 Check-Out          PRT         0\n6 City Hotel         166      2        0 Check-Out          PRT         0\n```\n:::\n:::\n\n\nAlmost all of the 0 night stays belong to resort hotels, many with very short lead time (indicating that potentially people just showed up on the day for a \"spa\" day or similar). One of them is canceled, which may impact why the result was 0. Perhaps most interestingly, all of those 0 day stays which we have a record for are in the same country: Portugal. Potentially the record keeping in Portugal is off or they allow/record 0 night stays for some reason, which other countries don't do. The most strange thing about these reservations is that they all have an \"average daily rate\" (`adr`) of 0, meaning no charge.\n\nNext, we look at the stays with 0 and 55 people.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  mutate(total_people = adults + children + babies) %>%\n  filter(customer_type == \"Group\", total_people %in% c(0, 55)) %>%\n  select(hotel, country, lead_time, market_segment, booking_changes, deposit_type, reservation_status, total_people, adr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 9\n  hotel        country lead_time market_segment booking_changes deposit_type\n  <chr>        <chr>       <dbl> <chr>                    <dbl> <chr>       \n1 Resort Hotel PRT           338 Direct                       0 No Deposit  \n2 Resort Hotel NULL            0 Offline TA/TO                0 No Deposit  \n3 City Hotel   ITA             0 Corporate                   11 No Deposit  \n4 City Hotel   USA            19 Online TA                    4 No Deposit  \n# ℹ 3 more variables: reservation_status <chr>, total_people <dbl>, adr <dbl>\n```\n:::\n:::\n\n\nWe have 1 stay with 55 people and 3 with 0 people. There do not appear to be any obvious patterns linking these together. They are from all different countries and market segments. The 55-person hotel booking was cancelled and had no deposit, but long lead time. The two zero-person reservations that were not cancelled had many booking changes, which could potentially indicate an unusual booking in some other way. Again, the average daily rates are mostly 0 with one that is only 6.4, which is extremely low. There is something mysterious going on with these bookings.\n\nIn order to understand what happened with these outliers further, and better understand the data more generally, some additional information would be helpful. Are 0 day stays possible at some of these places--for example, spa resorts where you just go in for the day? What does it mean to have a 0 person reservation? It is possible that that is a bug *or* maybe 0 was used instead of NA to represent missing data, causing confusion. More information on type of hotel would be useful as well. Could \"city hotel\" include something like a hostel, which would explain super low rates for some cases?\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
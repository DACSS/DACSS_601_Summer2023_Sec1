{
  "hash": "96f0477d670546e48d4f7d0bbb12c107",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\ndescription: \"Reading in data and creating a post\"\nauthor: \"Danny Holt\"\ndate: \"2023-06-01\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\nexecute:\n  echo: false\n---\n\n::: {.cell}\n\n:::\n\n\n## birds.csv\nFor this challenge, I will be reading in the dataset birds.csv\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds <- readr::read_csv(\"_data/birds.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 30977 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nHere is a sample of this data:\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(birds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  `Domain Code` Domain      `Area Code` Area  `Element Code` Element `Item Code`\n  <chr>         <chr>             <dbl> <chr>          <dbl> <chr>         <dbl>\n1 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n2 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n3 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n4 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n5 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n6 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n# ℹ 7 more variables: Item <chr>, `Year Code` <dbl>, Year <dbl>, Unit <chr>,\n#   Value <dbl>, Flag <chr>, `Flag Description` <chr>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
---
title: "Final Project -- Formula 1 Rule Change Analysis"
author: "Audrey Bertin"
description: "How did the 2022 F1 Rule Change Affect the Sport?"
date: "7/10/2023"
format:
  html:
    df-print: paged
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - final_project
  - formula_1
  - audrey_bertin

---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

I have been regularly watching Formula 1 for the last few years. In that time, there was a significant rule change that--purely observationally--appears to have changed the sport. It is not clear entirely how much or in what ways, so in this project, I want to dig into the data to see if I can come to some evidence-based conclusions.

## F1: A Primer

Formula 1 (F1) is the top class of single-seater motorsport racing. "Formula" refers to the set of rules to which all participants' cars must conform. For example, Formula 2 has different rules about car design and racing than Formula 1.

An F1 season consists of a series of races, known as Grands Prix (GP), which take place around the world on purpose-built racing circuits as well as public roads (termed "street circuits"). The number and location of races per season has varied significantly across the years.

There are currently 10 teams in Formula 1, officially termed "Constructors". Like the races, the number of teams (and names) has varied significantly over time. Each team has *two* drivers who race for them each season (as well as a driver on standby in case one of the primary drivers get sick/injured). 

Each Constructor is responsible for designing their own car each season within a shared set of regulations that restrict the design across all teams (e.g. a minimum weight, certain aerodynamic requirements, etc.). Some Constructors are known as "works teams". These teams design and construct the engines for their cars *in addition* to the aerodynamic components. The rest of the teams are called "customer teams". They design the aerodynamic parts of their car, but *purchase* their engines from one of the works teams instead of designing it themselves. For example, currently, the Mercedes *works* team uses their engines for their own car and  *also* provides engines to the Williams and McLaren teams. 

There is also the concept of "junior teams", where one company essentially has ownership over multiple teams in F1. They have one primary, A-team, and then a B-team that they can use to develop talent for their A-team. For example, currently Red Bull owns both the Red Bull Racing *and* Alpha Tauri teams, and regularly promote their drivers from Alpha Tauri to Red Bull Racing. For the purposes of the championship, however, these are considered *separate* constructors.

Because each Constructor designs their own car, cars can vary quite dramatically across teams, so there tends to be a somewhat clear hierarchy. The "worst" car often has nearly zero chance of winning a race, and the "best" cars almost always end up on the podium. In formula 1 lingo, teams are broken into three categories:

- "top" teams -- these teams win most of the races / usually make up the podium
- "midfield" teams -- these teams are not as fast as the top teams but often still place reasonably well and can, on occasion, end up on the podium or even (in rare cases) win a race
- "backmarker" teams -- these teams are significantly slower than the others, with *almost no* chance of ending up on the podium, and usually finish near the back of the pack

Due to this team hierarchy, it can be difficult to compare a driver from one team to a driver on another. Just because one driver always has faster lap times or finishes in a better position does not mean that they are necessarily a better driver, and could just mean that they have a better car. Since both teammates on a given team drive the same car, driver skill is often judged more-so based on how well a driver does compared to their teammates. 

In each season, there are two separate championships up for grabs -- a **Drivers Championship** and a **Constructors Championship**. The Drivers Championship is considered more prestigious and awards the individual driver who received the most points throughout the season. The Constructors Championship is awarded to the *team* with the most *combined* points across their two drivers. 

Teams and drivers have the chance to earn points at each Grand Prix (note that there are also points available in what are called "Sprint races", but these are a new feature in F1 and we'll be excluding them for the purposes of this analysis in order to simplify things).

Each GP occurs over one weekend is broken up into two segments: qualifying (typically on Saturday) and the race (typically on Sunday). In qualifying, drivers try to put together the *fastest* lap. Lap times then determine the order that the cars will start for the race.

Within the race, cars are required to make *at least one* pit stop to change which type of tires they are using (there are hard, medium, and soft tires available for each race, each of which have different pros and cons). Depending on how much a given track damages the tires, along with other factors such as if a car is involved in a collision, additional pitstops may take place to change tires or swap out parts.

At the end of the race, points are awarded based on drivers' finishing position. Additionally, the driver who records the fastest single lap throughout the race is awarded an extra point in addition to their points for finishing position. 

The current points distribution is as follows:

- 1st place: 25 pts
- 2nd place: 18 pts
- 3rd place: 15 pts
- 4th place: 12 pts
- 5th place: 10 pts
- 6th place: 8 pts
- 7th place: 6 pts
- 8th place: 4 pts
- 9th place: 2 pts
- 10th place: 1 pt
- Fastest Lap: 1 pt 
- 11th-20th place: 0 pts

Points are cumulative across a season, and the championships are awarded to the team and driver with the highest point totals.

## Dataset

Data on Formula 1 is available through Kaggle at the following link
https://www.kaggle.com/datasets/rohanrao/formula-1-world-championship-1950-2020

It contains F1 race data from the series' start in 1950 to the present season, which is currently in-progress and will run until November. This data was likely scraped from the official F1 website, which publishes detailed information after every race, and so it is likely to be accurate and official.

There are 14 separate files within this dataset that store different types of information:

- `circuits.csv` contains information about the different tracks the drivers race on (a row here is a track). There are 77 total circuits raced on since 1950.
- `constructor_standings.csv` contains information about how many points each team has after each race (a row here is a single team at a single race). We have 12,941 data points for the standings.
- `constructors.csv` stores the names and nationalities of teams (a row here is a team). There have been 211 total teams since 1950, and there are currently 10 active teams.
- `driver_standings.csv` stores information about how many points each driver was awarded at each race (a row here is a single driver at a single race). We have 33,902 records on drivers standings across all of the races. 
- `drivers.csv` stores the names and nationalities of drivers (a row here is a driver). There are 857 recorded drivers.
- `lap_times.csv` stores the lap times for every driver on every lap of each race (a row here is a single lap for a single driver at a single race). We have 538,121 lap times.
- `pit_stops.csv` stores information about every pit stop taken during each race (a row here is a single pit stop taken by a single driver at a single race). We have 9,634 recorded pit stops.
- `qualifying.csv` stores qualifying lap times for each driver from each GP (a row here is a single driver in a single GP, and each row contains all qualifying lap times across multiple sessions). We have 9,575 observations here.
- `races.csv` contains information about each GP, e.g. track name, date, etc. (a row here is a single GP). There are 1102 recorded races here.
- `results.csv` contains all of the finishing results for each race, e.g. driver finishing positions, # laps completed, fastest lap (a row here is a single driver at a single race). There are 25,840 observations.
- `seasons.csv` contains the years and urls for wikipedia pages associated with each season (a row here is a season). There are 74 seasons, covering 1950-2023.
- `sprint_results.csv` same as results.csv but for sprint races, which we'll be excluding as they are currently just a new feature that F1 is testing (a row here is a single sprint race). There are 120 recorded observations, a very small number since there have only been a handful of these.s
- `status.csv` contains the encodings of a `status` variable that is referenced in the results files (a row here is a status). There are 139 unique statuses.

We complete a cleaning of these datasets below. See the [associated homework 2 blog post](https://dacss.github.io/DACSS_601_Summer2023_Sec1/posts/AudreyBertin_Homework2.html) for more details on these modifications and what each dataset looked like before and after.

The main goals of these data cleaning steps are to:

1. Remove any unclear variables
2. Get any time related variables into an easily usable format (seconds) and convert any other variables that are not in a correct format
3. Rename variables to avoid duplicates when joining tables and to make each variable's meaning more clear

There is no pivoting involved in this step. Instead, this will be done as needed during the analysis of each research question (based on the question at hand and whether such reshaping is appropriate).


```{r message=FALSE, warning=FALSE}
# Circuits
circuits <- readr::read_csv("_data/formula1/circuits.csv")
circuits <- circuits %>%
  rename(circuit_name = name) %>%
  select(-alt)

# Constructors Standings
constructor_standings <- readr::read_csv("_data/formula1/constructor_standings.csv")
constructor_standings <- constructor_standings %>%
  select(-positionText)

# Constructors
constructors <- readr::read_csv("_data/formula1/constructors.csv")
constructors <- constructors %>%
  rename(constructor_name = name)

# Drivers Standings
driver_standings <- readr::read_csv("_data/formula1/driver_standings.csv")
driver_standings <- driver_standings %>%
  select(- positionText)

# Drivers
drivers <- readr::read_csv("_data/formula1/drivers.csv")
drivers <- drivers %>%
  mutate(number = na_if(number, "\\N"))

# Lap Times
lap_times <- readr::read_csv("_data/formula1/lap_times.csv")
lap_times <- lap_times %>%
  mutate(laptime_seconds = milliseconds/1000) %>%
  select(-c(time, milliseconds))

# Pit Stops
pit_stops <- readr::read_csv("_data/formula1/pit_stops.csv")

# Qualifying
qualifying <- readr::read_csv("_data/formula1/qualifying.csv")
qualifying <- qualifying %>%
  select(-number) %>%
  mutate(across(q1:q3, ~ period_to_seconds(ms(na_if(.x, "\\N"))))) %>%
  rename(q1_time_s = q1, q2_time_s = q2, q3_time_s = q3)

# Races
races <- readr::read_csv("_data/formula1/races.csv")
races <- races %>%
  select(raceId:name) %>%
  rename(gp_name = name)

# Results
results <- readr::read_csv("_data/formula1/results.csv")
results <- results %>%
  mutate(
    disqualified = as_factor(ifelse(positionText == "D", 1, 0)),
    retired = as_factor(ifelse(positionText == "R", 1, 0)),
    fastestLap = as.numeric(fastestLap),
    rank = as.numeric(rank),
    fastestLapTime = period_to_seconds(ms(na_if(fastestLapTime, "\\N"))),
    fastestLapSpeed = as.numeric(fastestLapSpeed),
    finishTimeSeconds = as.numeric(na_if(milliseconds, "\\N"))/1000) %>%
  rename(start_position = grid, finish_position = positionOrder) %>%
  select(-c(number, position, positionText, time, milliseconds)) 

# Seasons
seasons <- readr::read_csv("_data/formula1/seasons.csv")

# Status
status <- readr::read_csv("_data/formula1/status.csv")

```


A few key notes that are important to share about the datasets above include:

### Interpreting Qualifying Times

The qualifying dataset is hard to interpret for early races, but should work well for recent races. This is because it uses the current qualifying format to store data:

```{r}
qualifying %>% head(3)
```


Q1, Q2, and Q3 are three different segments of the current qualifying format, which was not introduced into 2016. Q1/2/3 did not exist prior to this in Formula 1, where qualifying took a lot of different formats. For a quick look at alternative historical formats, see [here](https://www.formula1.com/en/latest/features/2016/3/deciding-the-grid-a-history-of-f1-qualifying-formats.html).

Due in part to this, and the interest specifically in the most recent rule change, for this analysis, we'll focus just on data from 2016 onward!

This dataset also has a lot of missing data. Looking just at data from after 2016 or later, the fraction of missing values for each of the qualifying time columns is shown below: 

```{r}
qualifying %>%
  filter(raceId >= 968) %>%
  select(contains("_time_s")) %>%
  summarize_all(~sum(is.na(.x))/n())
```
51% of Q3 data is missing, 26% of Q2, and very little for Q1. This is not actually a missing data error, but rather what we would expect based on the qualifying format. Qualifying works as follows:

- In Q1, all drivers participate (unless there is some sort of mechanical issue preventing them from doing so). Drivers are ranked based on their fastest last time. The fastest 15 move on to Q2, while the slowest 5 are eliminated and take positions 20-16 on the starting lineup for the race based on time.
- In Q2, the top 15 again race for fastest single lap. This time, the fastest 10 move on and the bottom 5 are eliminated, again in race order of lap time, filling in positions 15-11.
- In Q3, the fastest 10 from Q2 race again for fastest single lap. No one is eliminated, but fastest lap times determine which position each of the top half of drivers will start, filling in positions 10-1.

If a driver does not race in one of the sessions, they won't have a time recorded.

Given this, the missing data values indicate that we actually have essentially all of the data. Very few drivers are missing from Q1. About 25% are missing from Q2, which is exactly what we would expect since the bottom 5 do not participate. Same with Q3, where we are missing half the records. 

Lap times typically get faster (smaller) from Q1 to Q3 as the intensity ramps up. We see this reflected in the data when we look at averages and standard deviations for each session:

```{r}
qualifying %>%
  filter(raceId >= 968) %>%
  select(contains("time_s")) %>%
  rename(q1 = q1_time_s, q2 = q2_time_s, q3 = q3_time_s) %>%
  pivot_longer(everything(), names_to = "session", values_to = "time_s") %>%
  group_by(session) %>%
  summarize(mean_time = mean(time_s, na.rm=TRUE), sd_time = sd(time_s, na.rm=TRUE))
```

### Interpreting Lap Times

We have information on lap times for each lap of the races that we can use to track whether cars are faster/slower over time. Looking at lap times across a handful of different Grands Prix from 2016-present, we can see they vary significantly across tracks:

```{r, message=FALSE}
lap_times %>%
  inner_join(races, by = 'raceId') %>%
  filter(laptime_seconds < 300, raceId >= 968, gp_name %in% c("Abu Dhabi Grand Prix", "Belgian Grand Prix", "Hungarian Grand Prix", "Monaco Grand Prix")) %>%
  ggplot(aes(x=laptime_seconds, fill = gp_name)) + geom_histogram(alpha = 0.3) + xlab("Lap Time in Seconds") + ylab("Count") + ggtitle("Distribution of Lap Times, 2016-present for several GPs") + theme_minimal() + scale_fill_brewer(palette = "Set1")
```

We can also use this data to view trends over time:

```{r}
lap_times %>%
  inner_join(races, by = 'raceId') %>%
  filter(laptime_seconds < 300, raceId >= 968, gp_name %in% c("Abu Dhabi Grand Prix", "Belgian Grand Prix", "Hungarian Grand Prix", "Monaco Grand Prix")) %>%
  group_by(raceId, gp_name) %>%
  summarize(avg_lap = mean(laptime_seconds)) %>%
  ggplot(aes(x= raceId, y=avg_lap, color=gp_name)) + geom_line() + xlab("Race ID") + ylab("Avg Lap Time in Seconds") + ggtitle("Avg Lap Times From 2016-present for several GPs") + theme_minimal()
```

Note the crazy spike we see here for the Belgian GP. This spike corresponds to the race in 2021 where there was a *huge* rain issue which slowed all the cars and resulted in such dangerous conditions that they could not complete a full race. See: https://www.formula1.com/en/racing/2021/Belgium.html.

### Interpreting Results Status

In the results data, there is some basic information on driver status that we can use to track how many drivers are completing races over time. We have information on how many drivers were disqualified, retired, or finished successfully, and we can use this to view trends over time (including over the time period we are interested in).

```{r}
results %>%
  mutate(finished = as_factor(ifelse(statusId == 1, 1, 0))) %>%
  select(raceId, disqualified, retired, finished) %>%
  pivot_longer(disqualified:finished, names_to = "status", values_to = "status_met") %>%
  filter(status_met == 1) %>%
  group_by(raceId, status) %>%
  summarize(count = n()) %>%
  ggplot(aes(x=raceId, y=count, color=status)) + geom_smooth()
```

In addition to these basic statuses, we have another column called `statusId` that can be used to find patterns about driver performance and car reliability. This column is linked to the `status` dataset, which stores the encodings for these statuses:

```{r}
head(status)
```
These can tell us more information about what happened to a driver in a particular race. We can see who loses races for a driver related reasons (e.g. "Accident"/"Collision") versus car failure (e.g. "Engine", "Gearbox"). We can see the most common statuses since 2016 below:


```{r message = FALSE}
top_statuses <- results %>%
  inner_join(status,by="statusId") %>%
  filter(raceId >= 968) %>%
  group_by(statusId, status) %>%
  summarize(n = n()) %>%
  arrange(desc(n)) 

top_statuses %>%
  head(15) %>%
  ggplot(aes(x=reorder(status,n), y=n)) + geom_col() +
  ggtitle("Most Common Race Statuses by Count Since 2016") + theme_minimal() + xlab("Status") + ylab("Count") + coord_flip()
```
### Dealing With Changing Team Names

In order to look at details by team, we will need to take another consideration into account: team names. From 2016 - 2022, there are quite a few different team names recorded in the data:

```{r}
constructor_standings %>%
  inner_join(constructors, by = 'constructorId') %>%
  filter(raceId >= 968) %>%
  select(constructor_name) %>%
  unique()
```


Although these teams all have separate names and designations, some of them are actually the *same* team, just in different years. For example, the current "Alpha Tauri" team used to be called "Toro Rosso". In order to keep the teams joined together through name changes, we can recategorize the team names as just their current name. 

Additionally, we are interested in comparing things before and after the rules change in 2022. This is impossible for teams that no longer existed in any form in 2022. The only team fitting in this category is "Manor Marussia". We can simply remove this one from our data 


```{r}
constructors <- constructors %>%
  filter(constructor_name != "Manor Marussia") %>%
  mutate(constructor_name = 
           case_when(
             constructor_name %in% c("AlphaTauri", "Toro Rosso") ~ "Alpha Tauri",
             constructor_name %in% c("Alfa Romeo", "Sauber") ~ "Alfa Romeo",
             constructor_name %in% c("Alpine F1 Team", "Renault") ~ "Alpine",
             constructor_name %in% c("Aston Martin", "Racing Point", "Force India") ~ "Aston Martin",
             constructor_name == "Haas F1 Team" ~ "Haas",
             TRUE ~ constructor_name #everyone else has remained the same name
             
         )) 
```



## Research Questions

Using this data, I'd like to investigate how Formula 1 has shifted before and after the most recent regulation change in 2022.

This change shifted how F1 cars look and perform, with new engine requirements, weight requirements, and aerodynamic guidelines. Just by watching (and not looking at any data) this change seems to have shaken things up considerably, finally ending the Mercedes' team's dominant win streak in the Constructors championship and seeing Red Bull take first place instead.

I'm interested in using this dataset to take a deeper look into how things have changed since the regulations shift -- comparing the previous era to the new era, which started in 2022. 

There are a few different aspects of this this comparison that are of interest:

1. The new regulations were designed to make it easier for cars to follow one another, theoretically making passing easier. How has this translated in reality? Is it easier now than before for "top" cars that start out of position to make up positions? Being "out of position" here means starting the race from a position worse than would be expected based on their car's performance due to a qualifying mistake, mechanical failure, etc.

2. How have lap times changed, both in qualifying and the race? Are the new cars getting faster/slower overall? Is this change the same across all race tracks?

3. How has car reliability changed? Are mechanical failures in races more common or less common than before? Are certain types of failures popping up that we didn't see much of before (or the opposite)?

4. Which drivers did the best job adapting to the regulations? We could look into how lap times changed overall on average, and then compare how close each driver's lap time changes were to the mean. 

5. How did the regulations shake up the order in the Constructors championships? Did any teams go from dominant to mediocre? Did anyone suddenly shoot up?

We will look at these questions one by one.

Note: The previous era prior to the regulation change, called the Turbo Hybrid era, technically started in 2014. However, due to a shift in qualifying formats in 2016, we will ignore 2014/15 and just look at 2016-2021 ("Before") and 2022 ("After") as our two comparison periods. We will also exclude the 2023 season as it is still not complete and data is not properly updated yet.


### **Is it easier to pass?**

For this data, we need to look at the `results` dataset and capture start position, finish position, and overall positions changed for the time period in question. 

```{r}
positions_gained <- results %>%
  filter(raceId >= 968) %>%
  select(raceId, driverId, constructorId, statusId, start_position, finish_position) %>%
  mutate(positions_gained = start_position - finish_position)
```

We then join this information to the race info, as well as driver and constructor names:

```{r}
positions_clean <- positions_gained %>%
  inner_join(drivers %>% select(driverId, code, surname), by = 'driverId') %>%
  inner_join(constructors %>% select(constructorId, constructor_name), by = 'constructorId') %>%
  inner_join(races %>% select(raceId, year, gp_name), by = 'raceId') %>%
  select(code, surname, constructor_name, year, gp_name, start_position, finish_position, positions_gained, statusId)
  
positions_clean %>% head(5)
```
In order to see if it is easier to pass, we can look into how much the average # of positions gained per race has changed over time (specifically for those who finished the race):

```{r}
positions_clean %>%
  filter(statusId == 1) %>%
  group_by(year) %>%
  summarize(avg_gain = mean(positions_gained)) %>%
  mutate(post_rules_change = ifelse(year == 2022, TRUE, FALSE)) %>%
  ggplot(aes(x = year, y = avg_gain, fill = post_rules_change)) + 
  geom_col() +
  ylab("Average Positions Gained") +
  xlab("Season") + 
  ggtitle("Avg Positions Gained For Drivers Who Finished, 2016-2022") + 
  scale_fill_manual(values = c("gray", "orange")) +
  theme_minimal()
```
Overall, we see a jump from 2021 (before the rules change) to 2022 (after), but it is very small and doesn't seem to be part of a larger trend.

What if we just look at cars that started out of position? For this analysis, we will define this as a car that **started at least 2 places behind the average starting position of their team that year**. 

We can calculate average start position for each team each year and use that to identify who is starting out of position:

```{r}
avg_start <- positions_clean %>%
  group_by(year, constructor_name) %>%
  summarize(avg_start = mean(start_position))

out_of_position <- positions_clean %>%
  inner_join(avg_start, by = c('year', 'constructor_name')) %>%
  mutate(out_of_position = ifelse((start_position - avg_start >= 2), TRUE, FALSE))

out_of_position %>%
  group_by(year, out_of_position) %>%
  summarise(avg_gain = mean(positions_gained)) %>%
  mutate(post_rules_change = ifelse(year == 2022, TRUE, FALSE)) %>%
  ggplot(aes(x = year, y = avg_gain, fill = out_of_position, color = post_rules_change)) + 
  geom_col(position = "dodge") +
  geom_hline(yintercept = 0) + 
  ylab("Average Positions Gained") +
  xlab("Season") + 
  ggtitle("Avg Positions Gained Based on Out Of Position Start, 2016-2022") + 
  scale_fill_manual(values = c("gray", "lightblue")) +
  scale_color_manual(values = c("white", "orange")) +
  theme_minimal()
```
We see now that drivers who started in position on average *lost* positions (but typically fewer) while drivers who started out of position on average *gained* positions (typically more). This makes sense logically. When a fast car starts the race behind where they should, they can more easily pass. If a car starts at its average position or even higher, then it is surrounded by other cars that are at least as good, and so it's much easier to be passed and much harder to pass.

Looking at the trend overall, there does not seem to be a clear change with the 2022 rule change. In 2022, the average number of positions gained for cars starting out of position was higher than 2021, but is more so part of a continuing upward trend than an outlier, particularly as we note that both 2017 and 2018 have higher average positions gained.

For cars starting in position, we see a similar trend of changing times. However, we do note that 2022 is the largest number of positions lost on average across all years in our time frame, so it is possible that starting in position (or ahead of expectations) left drivers more vulnerable than in past years. In other words, just because they started at the front does not mean that a faster car behind could not pass.


### **How have lap times changed?**

### **How has reliability changed?**

### **Which drivers adapted best to the regulations?**

### **How did the regulation change shake up the championship?**

For this question, we'll separately look at the Constructors Standings and Drivers Standings. 

Let's start with the Constructors. Do we see a significant change in the lineup of teams before and after the change? To determine this, we can create a timeseries plot showing how team placings changed season by season from 2016-2022.

We start by joining the constructors and races tables together:

```{r}
# Join constructor results table to more information on constructors and races
constructor_results <- constructor_standings %>% 
  inner_join(constructors, by = 'constructorId') %>%
  inner_join(races, by = 'raceId')

head(constructor_results)
```

We can then filter this to the years and columns relevant to us, and group by/summarize to find the total number of points each team got each season:

```{r, message = FALSE}
constructors_ranked <- constructor_results %>%
  filter(year >= 2016 & year < 2023)  %>%
  select(year, raceId, position, points, constructor_name) %>%
  group_by(year, constructor_name) %>%
  summarize(final_points = max(points))
```

Using the same historic team name update as we have done previously, we will use reconfigured team names (which use the most recent name to reference all iterations of the team) to make it easier to compare each team's performance over time. We also include a vertical line to show the point where the transition occurred. The line and to the left are before the transition. To the right is after.

Although these teams all have separate names and designations, some of them are actually the *same* team, just in different years. For example, the current "Alpha Tauri" team used to be called "Toro Rosso". In order to keep the teams joined together through name changes, we can recategorize the team names as just their current name and also remove the teams that no longer existed in the 2022 season. This helps make our graph easier to follow so we can better trace the changes over time.


```{r}
constructors_ranked %>%
  ggplot(aes(x = year, y = final_points, color = constructor_name)) + 
  geom_line() + 
  geom_vline(xintercept = 2021) + 
  theme_minimal() +
  xlab("Season") +
  ylab("Constructors' Championship Points") +
  ggtitle("Points Earned In The Constructors' Championship, 2016-2022", subtitle = "Using Current Team Names")
```

As we can see here, relative rankings in the championship remained pretty steady for a good part of the old regulations, with Mercedes dominant, Ferrari having a few good years, and Red Bull close behind. 

After the regulations change, Mercedes dropped from 1st to 3rd place and Red Bull and Ferrari had massive spikes in points. However, note that they were on the up-swing before the change was put in place (in 2021) so it could be unrelated. McLaren did not seem to take the change well. They were previously on an upward points scoring trend and shot down in 2022. We see the same trend with Alpha Tauri. Meanwhile, Hass and Alfa Romeo, who in previous years had struggled to score any points did see a small jump in points and a positive shift in their overall rankings.

It is hard to tell fully, without a few more years worth of data, but it does appear that the regulation change did switch the team rankings up and some teams (Red Bull/Ferrari) adapted better than others (Alpha Tauri, McLaren).



## References


#### Datasets

Rao, R. (2023). Formula 1 World Championship Data: 1950-2023. *Kaggle*.
<https://www.kaggle.com/datasets/rohanrao/formula-1-world-championship-1950-2020>

Formula 1 (2023). Formula 1 Race Result Archive. *Formula 1*.
<https://www.formula1.com/en/results.html>


#### Overview of F1

Federation International de l'Automobile (FIA). (2023). Regulations: FIA Formula One World Championship. 
<https://www.fia.com/regulation/category/110>

Tippett, B. (2021). The Complete Guide To Understanding Formula 1. *Defector*.
<https://defector.com/the-complete-guide-to-understanding-formula-1>

Kanal, S. (2023). The beginner's guide to...the Formula 1 Grand Prix Weekend. *Formula 1*.
<https://www.formula1.com/en/latest/article.the-beginners-guide-to-the-formula-1-grand-prix-weekend.20OGbgZCWKj9ML79gBzfoX.html>

F1 Chronicle Media Team (2020). The Complete Beginners Guide to Formula 1. *F1 Chronicle*.
<https://f1chronicle.com/a-beginners-guide-to-formula-1/>

#### Techincal / Software

Wickham, H., & Grolemund, G. (2016). R for data science: Visualize, model, transform, tidy, and import data. 
<https://r4ds.had.co.nz> 

R Core Team (2023). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna,
  Austria. <https://www.R-project.org/>.


#### Other

Formula 1. (2021). 2021 Belgian Grand Prix. *Formula 1*.
<https://www.formula1.com/en/racing/2021/Belgium.html>


